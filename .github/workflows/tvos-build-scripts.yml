name: tvos build scripts

on:
  push:
    branches:
      - development
      - main
    paths:
      - '.github/workflows/tvos-build-scripts.yml'
      - 'apple/**'
      - '!apple/README.md'
      - 'scripts/**'
      - 'tools/**'
      - 'apple.sh'
      - 'tvos.sh'
  pull_request:
    branches:
      - development
      - main
    paths:
      - '.github/workflows/tvos-build-scripts.yml'
      - 'apple/**'
      - '!apple/README.md'
      - 'scripts/**'
      - 'tools/**'
      - 'apple.sh'
      - 'tvos.sh'

jobs:
  build-on-macos-tahoe:
    name: tvos on tahoe
    runs-on: macos-26
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
      - name: prerequisites
        run: brew install autoconf automake libtool pkg-config curl git cmake nasm
      - name: set up xcode
        run: echo "export DEVELOPER_DIR=/Applications/Xcode_26.app/Contents/Developer" > ~/.xcode.for.ffmpeg.kit.sh
      - name: run the build script
        run: ./tvos.sh --xcframework --enable-tvos-bzip2 --enable-tvos-audiotoolbox --enable-tvos-libiconv --enable-tvos-videotoolbox --enable-tvos-zlib
      - name: print build logs
        if: ${{ always() }}
        run: cat build.log
      - name: print ffbuild logs
        if: ${{ failure() }}
        run: '[[ -f ./src/ffmpeg/ffbuild/config.log ]] && tail -50 ./src/ffmpeg/ffbuild/config.log'
  build-on-macos-sequoia:
    name: tvos on sequoia
    runs-on: macos-15
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
      - name: prerequisites
        run: brew install autoconf automake libtool pkg-config curl git cmake nasm
      - name: set up xcode
        run: echo "export DEVELOPER_DIR=/Applications/Xcode_16.4.app/Contents/Developer" > ~/.xcode.for.ffmpeg.kit.sh
      - name: run the build script
        run: ./tvos.sh --xcframework --enable-tvos-bzip2 --enable-tvos-audiotoolbox --enable-tvos-libiconv --enable-tvos-videotoolbox --enable-tvos-zlib
      - name: print build logs
        if: ${{ always() }}
        run: cat build.log
      - name: print ffbuild logs
        if: ${{ failure() }}
        run: '[[ -f ./src/ffmpeg/ffbuild/config.log ]] && tail -50 ./src/ffmpeg/ffbuild/config.log'
